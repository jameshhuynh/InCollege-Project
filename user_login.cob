       >>SOURCE FORMAT FREE
*> Combined IDAHO-2 / IDAHO-3 â€“ Account creation and login demo
IDENTIFICATION DIVISION.
PROGRAM-ID. ACCOUNT-MANAGER.

DATA DIVISION.
WORKING-STORAGE SECTION.

*> Input/Output lines
01 WS-INPUT-LINE      PIC X(80).
01 WS-OUTPUT-LINE     PIC X(80).

*> User credentials
01 WS-USERNAME        PIC X(20).
01 WS-PASSWORD        PIC X(12).

*> Login flags
01 WS-LOGIN-SUCCESS   PIC X VALUE 'N'.
01 WS-FOUND-USER      PIC X VALUE 'N'.

*> User table
01 WS-USER-COUNT      PIC 99 VALUE 0.
01 WS-MAX-USERS       PIC 99 VALUE 5.
01 WS-I               PIC 99.

01 WS-USER-TABLE.
   05 WS-USER-ENTRY OCCURS 5 TIMES.
      10 WS-USER-ID   PIC X(20).
      10 WS-USER-PASS PIC X(12).

*> Password validation flags
01 WS-PASSWORD-FLAGS.
   05 WS-HAS-UPPER     PIC X VALUE 'N'.
   05 WS-HAS-DIGIT     PIC X VALUE 'N'.
   05 WS-HAS-SPECIAL   PIC X VALUE 'N'.
   05 WS-VALID-LENGTH  PIC X VALUE 'N'.

01 WS-CHAR            PIC X.
01 WS-PASSWORD-LENGTH PIC 99.

PROCEDURE DIVISION.

MAIN-PARA.
    PERFORM CREATE-ACCOUNT
    PERFORM LOGIN-USER
    STOP RUN.

*>-----------------------------------------
*> Account creation (IDAHO-2)
*>-----------------------------------------
CREATE-ACCOUNT.
    IF WS-USER-COUNT >= WS-MAX-USERS
        MOVE "All permitted accounts created" TO WS-OUTPUT-LINE
        PERFORM WRITE-OUTPUT
    ELSE
        PERFORM GET-NEW-USERNAME
        PERFORM GET-NEW-PASSWORD
        IF WS-HAS-UPPER = 'Y'
           AND WS-HAS-DIGIT = 'Y'
           AND WS-HAS-SPECIAL = 'Y'
           AND WS-VALID-LENGTH = 'Y'
           ADD 1 TO WS-USER-COUNT
           MOVE WS-USERNAME TO WS-USER-ID(WS-USER-COUNT)
           MOVE WS-PASSWORD TO WS-USER-PASS(WS-USER-COUNT)
           MOVE "Account created successfully!" TO WS-OUTPUT-LINE
           PERFORM WRITE-OUTPUT
        END-IF
    END-IF.

GET-NEW-USERNAME.
    MOVE "Enter username:" TO WS-OUTPUT-LINE
    PERFORM WRITE-OUTPUT
    PERFORM READ-INPUT
    MOVE WS-INPUT-LINE TO WS-USERNAME.

GET-NEW-PASSWORD.
    MOVE "Enter password:" TO WS-OUTPUT-LINE
    PERFORM WRITE-OUTPUT
    PERFORM READ-INPUT
    MOVE WS-INPUT-LINE TO WS-PASSWORD
    PERFORM VALIDATE-PASSWORD.

VALIDATE-PASSWORD.
    MOVE 'N' TO WS-HAS-UPPER WS-HAS-DIGIT WS-HAS-SPECIAL WS-VALID-LENGTH
    MOVE 0 TO WS-PASSWORD-LENGTH
    PERFORM VARYING WS-I FROM 1 BY 1 UNTIL WS-I > 12
        IF WS-PASSWORD(WS-I:1) NOT = SPACE
            ADD 1 TO WS-PASSWORD-LENGTH
        END-IF
    END-PERFORM
    IF WS-PASSWORD-LENGTH >= 8 AND WS-PASSWORD-LENGTH <= 12
        MOVE 'Y' TO WS-VALID-LENGTH
    END-IF
    PERFORM VARYING WS-I FROM 1 BY 1 UNTIL WS-I > WS-PASSWORD-LENGTH
        MOVE WS-PASSWORD(WS-I:1) TO WS-CHAR
        IF WS-CHAR >= 'A' AND WS-CHAR <= 'Z'
            MOVE 'Y' TO WS-HAS-UPPER
        END-IF
        IF WS-CHAR >= '0' AND WS-CHAR <= '9'
            MOVE 'Y' TO WS-HAS-DIGIT
        END-IF
        IF WS-CHAR = '!' OR WS-CHAR = '@' OR WS-CHAR = '#' OR
           WS-CHAR = '$' OR WS-CHAR = '%' OR WS-CHAR = '^' OR
           WS-CHAR = '&' OR WS-CHAR = '*'
            MOVE 'Y' TO WS-HAS-SPECIAL
        END-IF
    END-PERFORM
    IF WS-VALID-LENGTH = 'N'
        MOVE "Password must be 8-12 chars" TO WS-OUTPUT-LINE
        PERFORM WRITE-OUTPUT
    END-IF
    IF WS-HAS-UPPER = 'N'
        MOVE "Password needs uppercase" TO WS-OUTPUT-LINE
        PERFORM WRITE-OUTPUT
    END-IF
    IF WS-HAS-DIGIT = 'N'
        MOVE "Password needs digit" TO WS-OUTPUT-LINE
        PERFORM WRITE-OUTPUT
    END-IF
    IF WS-HAS-SPECIAL = 'N'
        MOVE "Password needs special (!,@,#,$...)" TO WS-OUTPUT-LINE
        PERFORM WRITE-OUTPUT
    END-IF.

READ-INPUT.
    ACCEPT WS-INPUT-LINE.

WRITE-OUTPUT.
    DISPLAY WS-OUTPUT-LINE.

*>-----------------------------------------
*> Login (IDAHO-3)
*>-----------------------------------------
LOGIN-USER.
    MOVE 'N' TO WS-LOGIN-SUCCESS
    PERFORM UNTIL WS-LOGIN-SUCCESS = 'Y'
        MOVE "Please enter your username:" TO WS-OUTPUT-LINE
        PERFORM WRITE-OUTPUT
        PERFORM READ-INPUT
        MOVE WS-INPUT-LINE TO WS-USERNAME

        MOVE "Please enter your password:" TO WS-OUTPUT-LINE
        PERFORM WRITE-OUTPUT
        PERFORM READ-INPUT
        MOVE WS-INPUT-LINE TO WS-PASSWORD

        PERFORM VALIDATE-LOGIN

        IF WS-LOGIN-SUCCESS = 'Y'
        MOVE SPACES TO WS-OUTPUT-LINE
            STRING "Welcome, " DELIMITED BY SIZE
                   WS-USERNAME DELIMITED BY SPACE
                   "!"
                   INTO WS-OUTPUT-LINE
            PERFORM WRITE-OUTPUT
        ELSE
            MOVE "Incorrect username/password, please try again" TO WS-OUTPUT-LINE
            PERFORM WRITE-OUTPUT
        END-IF
    END-PERFORM.

VALIDATE-LOGIN.
    MOVE 'N' TO WS-FOUND-USER
    PERFORM VARYING WS-I FROM 1 BY 1 UNTIL WS-I > WS-USER-COUNT
        OR WS-FOUND-USER = 'Y'
        IF WS-USER-ID(WS-I) = WS-USERNAME
           AND WS-USER-PASS(WS-I) = WS-PASSWORD
            MOVE 'Y' TO WS-FOUND-USER
            MOVE 'Y' TO WS-LOGIN-SUCCESS
        END-IF
    END-PERFORM.

